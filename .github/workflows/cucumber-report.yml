name: cucumber report
on:
  push:
  workflow_dispatch:

concurrency:
  group: cucumber-${{ github.ref }}
  cancel-in-progress: true

env:
  RABBITMQ_DEFAULT_USER: "guest"
  RABBITMQ_DEFAULT_PASS: "guest"

jobs:
  cucumber-report:
    strategy:
      fail-fast: false
      matrix:
        feature:
          [
            "admin",
            "brokers",
            "cover_all",
            "employee",
            "employers",
            "general_agencies",
            "group_selection",
            "hbx_admin",
            "hbx",
            "insured",
            "integration",
            "permissions",
            "plan_shopping",
            "user_accounts",
          ]
    runs-on: ubuntu-latest
    services:
      rabbitmq:
        image: rabbitmq:latest
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --name "rabbitmq"
          --health-cmd "rabbitmqctl node_health_check"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mongo:
        image: mongo:4.2
        ports:
          - 27017:27017
        options: >-
          --name "mongo"
          --health-cmd mongo
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - uses: ruby/setup-ruby@v1
      - uses: actions/setup-node@v2
        with:
          node-version: "8"
      - name: Restore project gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: v1-${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/Gemfile' ) }}
          restore-keys: |
            v1-${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}-${{ hashFiles('**/Gemfile' ) }}
      - name: Install project gems
        run: |
          gem update --system
          bundle config path vendor/bundle
          bundle install
      - name: Restore Node Modules
        id: npm-cache
        uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-v8-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-v8-${{ hashFiles('yarn.lock') }}
      - name: Install node dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: yarn install
      - name: Run tests
        run: bundle exec cucumber -P features/${{ matrix.feature }} --format json --out ci/cucumber/${{ matrix.feature }}-cucumber-report.json -r features --strict --tags 'not @wip and not @broken and not @flaky and not @ma_only'
      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.feature }}
          path: ci/cucumber/${{ matrix.feature }}-cucumber-report.json
  concat-reports:
    needs: [cucumber-report]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          path: ci/cucumber/compressed-reports
      - uses: markgoho/analyze-cucumber-report@trunk
        with:
          individual-reports-folder: "ci/cucumber/compressed-reports"
          output-report: "cucumber-split-config.json"
      - uses: actions/upload-artifact@v2
        with:
          name: cucumber-split-config
          path: cucumber-split-config.json
