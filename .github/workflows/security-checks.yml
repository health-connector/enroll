name: Security Checks
on:
  workflow_dispatch:
  push:
  schedule:
    - cron: '0 5 * * *'

concurrency:
  group: qb-${{ github.ref }}
  cancel-in-progress: true #This is temporary to avoid trunk GHA collisions  

jobs:
  bearer:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: ruby/setup-ruby@v1
          with:
            bundler-cache: true
        - name: install bearer
          run: |
            sudo apt-get install apt-transport-https
            echo "deb [trusted=yes] https://apt.fury.io/bearer/ /" | sudo tee -a /etc/apt/sources.list.d/fury.list
            sudo apt-get update
            sudo apt-get install bearer
        - name: run bearer
          continue-on-error: true
          run: |
            bearer scan --quiet --config-file ./bearer.yml . 
        - name: build bearer report
          # if: failure() #enable when all criticals issues are fixed
          run: |
            bearer scan --quiet --config-file ./bearer.yml . > bearer_full.txt
        - name: upload bearer failure report
          uses: actions/upload-artifact@v4
          # if: failure() #enable when all criticals issues are fixed
          with:
            name: Bearer Report
            path: bearer_full.txt
        - name: Write to Job Summary
          run: grep -A 10 '=====================================' bearer_full.txt >> $GITHUB_STEP_SUMMARY
  
  brakeman:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Brakeman code scanning
          continue-on-error: true
          run: docker run -v "$(pwd)":/code presidentbeef/brakeman -o /dev/stdout -o output.markdown
        - name: upload Brakeman failure report
          uses: actions/upload-artifact@v4
          # if: failure()
          with:
            name: Brakeman Report
            path: output.markdown
        - name: Write to Job Summary
          run: cat output.markdown >> $GITHUB_STEP_SUMMARY
  
  bundler-audit:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - uses: ruby/setup-ruby@v1
          with:
            bundler-cache: true
        - name: install bundler-audit
          run: |
            gem install bundler-audit && bundle-audit update
        - name: run bundler-audit
          continue-on-error: true
          run: |
            bundle-audit --output=bundler_audit.txt
        - name: upload bundler-audit failure report
          uses: actions/upload-artifact@v4
          # if: failure()
          with:
            name: Bundler Report
            path: bundler_audit.txt
        - name: Write to Job Summary
          run: |
            echo "Critical:" >> $GITHUB_STEP_SUMMARY 
            cat bundler_audit.txt | grep Critical | wc -l >> $GITHUB_STEP_SUMMARY
            echo "High:" >> $GITHUB_STEP_SUMMARY 
            cat bundler_audit.txt | grep High | wc -l >> $GITHUB_STEP_SUMMARY
            echo "Medium:" >> $GITHUB_STEP_SUMMARY
            cat bundler_audit.txt | grep Medium | wc -l >> $GITHUB_STEP_SUMMARY
            echo "Low:" >> $GITHUB_STEP_SUMMARY
            cat bundler_audit.txt | grep Low | wc -l >> $GITHUB_STEP_SUMMARY
    
