- single_product_carriers = @sponsored_benefit_form.catalog.single_product_options
- is_new_benefit = @sponsored_benefit_form.is_new_benefit
= f.hidden_field :is_new_benefit, value: f.object.is_new_benefit

#metal-level-select.card
	.card-body
		ul.nav.nav-tabs role="tablist"
			li.active.col-md-4.col-sm-4 role="presentation"
				a href="#plan" aria-controls="dentalPlan" role="tab" data-toggle="tab" One Plan
				= f.radio_button :product_package_kind, "single_product", checked: true, class: 'product_package_kind mr-1 hidden'
		.tab-content
			.tab-pane.active#plan role="tabpanel"
				h4 = fetch_dental_product_option_choice_description_for_single_plan
				br
				- single_product_carriers.each do |issuer_name, issuer_id|
					.col-xs-3.plans
						.col-xs-12
							label.container
								= f.radio_button :product_option_choice, issuer_id, :data => {issuername: issuer_name}, onclick:"MetalLevelSelect.getPlanInfo(this); loadSingleProductSponsorContribution(this);"
								span.checkmark
								= issuer_name

#referencePlans.hidden
	h2.heading-text.pt-1.float-left Select Your Reference Plan

	h4 Now select a reference plan. The reference plan is used to cap employer costs. Youâ€™ll choose a reference plan. Then, your contribution towards employee premiums will be applied to the reference plan you choose regardless of which plans your employees select. After you select your reference plan, scroll down to review your costs.

	= render "products", f: f

= render "employee_costs_modal"

#yourSponsorContributions
	#sponsorContributions.mt-1
		.col-xs-12
			.col-xs-6.offered-heading
				.text-uppercase.text-center
					| Offered
					i.fas.fa-question-circle
			.col-xs-6.offered-heading
				.text-uppercase.text-center
					| Employer Contribution
					i.fas.fa-question-circle
			.col-xs-12#benefitFields
				= f.fields_for :sponsor_contribution, (@sponsored_benefit_form.sponsor_contribution || @sponsored_benefit_form.catalog.sponsor_contributions.first), errors: {}, fieldset: false do |sc|
					= sc.fields_for :contribution_levels, sc.object.contribution_levels, errors: {}, fieldset: false do |cl|
						.row
							.col-xs-6.pr-3
								.row.sc-container
									.col-xs-12.ml-2.mt-2
										label.container.ml-1
											= cl.object.display_name.try(:humanize)
											= cl.hidden_field :display_name, value: cl.object.display_name
											= cl.hidden_field :contribution_unit_id, value: cl.object.contribution_unit_id
											= cl.check_box :is_offered, {class: "contribution_handler", disabled: (cl.object.is_employee_cl), :onchange => "newContributionAmounts(this)"}, "true", "false"
											span.checkmark

							.col-xs-6
								.col-xs-3
									= cl.number_field :contribution_factor, class: "cl-input-#{cl.object.contribution_unit_id}", value: (cl.object.contribution_factor * 100).to_i, "data" => {"unit-id" => cl.object.contribution_unit_id.to_s}, :onchange => "MetalLevelSelect.setSliderInput(this); MetalLevelSelect.newContributionAmounts(this);"
								.col-xs-9
									input.slider class="slider-#{cl.object.contribution_unit_id.to_s}" data-unit-id=cl.object.contribution_unit_id min=0 max=100 step=5 type="range" value=(cl.object.contribution_factor * 100) onchange="MetalLevelSelect.setNumberInput(this); MetalLevelSelect.newContributionAmounts(this);"
										span.slide-label.pull-right


	#yourReferencePlanDetails
    - if !is_new_benefit && !is_new_benefit.nil?
      #referencePlanEditDisplay
        span.hidden.edit_flow
          = f.radio_button :reference_plan_id, f.object.reference_plan_id, :data => {plan_title: f.object.reference_product.title, metal_level: f.object.reference_product.metal_level_kind, carrier_name: f.object.reference_product.issuer_name, plan_type: f.object.reference_product.plan_kind}
        = render "reference_plan", f: f

- if !is_new_benefit && !is_new_benefit.nil?
  javascript:
    window.onload = function() {
      document.getElementById('metal-level-select').classList.add('hidden');
      MetalLevelSelect.loadEmployeeCosts();
    }

javascript:
	window.MetalLevelSelect_ReferencePlanDetailsShell = '#{escape_javascript(render :partial => "./ui-components/v1/cards/reference_plan_details_shell")}'
	window.MetalLevelSelect_SponsorContributionsShell = '#{escape_javascript(render :partial => "./ui-components/v1/cards/sponsor_contributions_shell")}';
	window.productOptionKind = 'single_issuer';
	window.sponsorContribution = [];
	window.filteredProducts = [];
	window.employeeCostEstimate = #{@sponsored_benefit_form.employees_cost.to_json.html_safe};
	window.planOptions = #{@sponsored_benefit_form.catalog.plan_options.to_json.html_safe};
	window.applicationStartOn = #{@sponsored_benefit_form.benefit_application.effective_period.min.strftime("%m-%d").to_json.html_safe};
	window.referencePlanID = String;
	window.erCL = #{aca_shop_market_employer_contribution_percent_minimum};
	window.erDentalCL = #{aca_shop_market_employer_dental_contribution_percent_minimum};
	window.familyCL = #{aca_shop_market_employer_family_contribution_percent_minimum};
	window.sponsorContributions = #{@sponsored_benefit_form.catalog.sponsor_contributions(@sponsored_benefit_form.benefit_package_id).to_json.html_safe};
	window.tempContributionValues = {
		eeContribution: 0,
		spouse: 0,
		domesticPartner: 0,
		childUnder26: 0
	}
	window.onload = function() {
		MetalLevelSelect.disableNewPlanYearButton();
	}
