- if @profile_type == "broker_agency"
  .broker-registration-container.mt-4.pt-4.pl-3.pr-3.pb-3
    - language_list =  LanguageList::COMMON_LANGUAGES.sort_by {|lan| lan.common_name}.map do |lang| 
      - { common_name: lang.common_name, code: lang.iso_639_1 }

    - practice_area_list = Array.new
    - BenefitSponsors::Organizations::BrokerAgencyProfile::MARKET_KINDS_OPTIONS.each_pair do |k, v|
      - practice_area_list << {code: v, label: k}
    - practice_area_list = [{code: "", label: "Select Practice Area"}] + practice_area_list

    - state_list = ["SELECT STATE"] + State::NAME_IDS.map(&:last).sort_by {|c| c }

    - broker_registration_text = l10n("broker_agencies.broker_roles.broker_registration_text", site_short_name: site_short_name, site_brokers_agreement_path: site_brokers_agreement_path)

    broker-agency-profile-create{
      data-broker-registration-text="#{broker_registration_text.to_json}"
      data-language-list="#{language_list.to_json}"
      data-practice-area-list="#{practice_area_list.to_json}"
      data-state-list="#{state_list.to_json}"
      data-submit-uri="#{profiles_broker_agencies_broker_agency_profiles_path.to_json}"
      }

- else
  = form_for @agency, as: :agency, url: {action: "create"},  html: { class: "needs-validation s508", novalidate:true } do |f|
    = f.hidden_field :profile_type, value: params[:profile_type]
    = render 'benefit_sponsors/shared/error_messages', :object => @agency
    = render './ui-components/v1/forms/employer_registration/employer_profile_form', f: f
    
javascript:
  validateForm()


